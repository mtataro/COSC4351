function updateScore() {
    let selectionCheck = document.querySelectorAll('input[type=radio]:checked');
    let warningLabel = document.getElementById('warning');
    let scoreLabel = document.getElementById('score');
    if(selectionCheck.length < 10){
        return `Not everything selected`;
    }else{
        warningLabel.style.display = 'none';
    }
    //mapping for the values for calculating the scores
    var scope = {
        scope_U: 1.0,
        scope_C: 1.08
    };
    var senConf = {
        sens_N: {conf_N:0.00, conf_L:0.22, conf_H:0.56},
        sens_L: {conf_N:0.00, conf_L:0.65, conf_H:0.75},
        sens_H: {conf_N:0.00, conf_L:0.85, conf_H:0.95}
    };
    var healthIntegrity = {
        health_N: {integ_N: 0.00, integ_L: 0.22, integ_H: 0.56},
        health_L: {integ_N: 0.55, integ_L: 0.60, integ_H: 0.75},
        health_H: {integ_N: 0.85, integ_L: 0.90, integ_H:  0.95}
    };
    var healthAvail = {
        health_N: {avail_N: 0.00, avail_L: 0.22, avail_H: 0.56},
        health_L: {avail_N: 0.55, avail_L: 0.60, avail_H: 0.65},
        health_H: {avail_N: 0.85, avail_L: 0.90, avail_H:  0.95}
    };
    var attackVec = {
        AV_N: 0.85,
        AV_A: 0.62,
        AV_L: 0.55,
        AV_P: 0.20  
    };
    var attackComplexity = {
        AC_L: 0.77,
        AC_H: 0.44
    };
    var priviledgeReq = {
        PR_N: 0.85,
        PR_L: 0.62,
        PR_H: 0.27
    };
    var userInter = {
        UI_N: 0.85,
        UI_R: 0.62
    };

    //scope value
    var scopeNum = scope[`${selectionCheck[4].id}`]
    //senConf value
    interObject = senConf[`${selectionCheck[9].id}`]
    var senConfNum = interObject[`${selectionCheck[5].id}`]
    //heathInteg value
    interObject = healthIntegrity[`${selectionCheck[8].id}`]
    var healthIntegrityNum = interObject[`${selectionCheck[6].id}`]
    //healthAvail value
    interObject = healthAvail[`${selectionCheck[8].id}`]
    var healthAvailNum = interObject[`${selectionCheck[7].id}`]
    //attackVec value
    var attackVecNum = attackVec[`${selectionCheck[0].id}`]
    //attackComplexityNum value
    var attackComplexityNum = attackComplexity[`${selectionCheck[1].id}`]
    //priviledgeReq value
    var priviledgeReqNum = priviledgeReq[`${selectionCheck[2].id}`]
    //userInter value
    var userInterNum = userInter[`${selectionCheck[3].id}`]
    //actually start calculating bullshit
    var baseScore = (senConfNum + healthIntegrityNum + healthAvailNum);
    var exploitScore = (attackVecNum * attackComplexityNum * priviledgeReqNum * userInterNum);
    let finalScore = scopeNum * ((3.326258289 * baseScore) + (1.1 * exploitScore));
    console.log(finalScore)
    if(finalScore > 10){
        finalScore = 10;
    }
    if(baseScore === 0){
        finalScore = 0;
    }
    finalScore = (Math.ceil(finalScore * 10) / 10).toFixed(1);
    console.log(finalScore)
    //finally display score in scorebox
    scoreLabel.innerHTML = `${finalScore}`
}

const radios = document.querySelectorAll('input[type=radio]');
for(const radio of radios){
    radio.onclick = () =>{
        updateScore()
    }
}